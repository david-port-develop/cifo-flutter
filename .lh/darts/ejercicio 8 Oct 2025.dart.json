{
    "sourceFile": "darts/ejercicio 8 Oct 2025.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1760002387927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1760002387927,
            "name": "Commit-0",
            "content": "import 'dart:io';\n\n// Funciones de validación (las mismas que he utilizado el 7 de octubre)\nint pedirNumero(String mensaje) {\n  int? numero;\n  while (numero == null) {\n    print(mensaje);\n    String? input = stdin.readLineSync();\n    if (input != null && input.isNotEmpty) {\n      try {\n        numero = int.parse(input);\n      } catch (e) {\n        print('Error: \"$input\" no es un número válido. Intenta de nuevo.');\n      }\n    } else {\n      print('Error: No ingresaste ningún valor. Intenta de nuevo.');\n    }\n  }\n  return numero;\n}\n\ndouble pedirDouble(String mensaje) {\n  double? numero;\n  while (numero == null) {\n    print(mensaje);\n    String? input = stdin.readLineSync();\n    if (input != null && input.isNotEmpty) {\n      try {\n        numero = double.parse(input);\n      } catch (e) {\n        print('Error: \"$input\" no es un número válido. Intenta de nuevo.');\n      }\n    } else {\n      print('Error: No ingresaste ningún valor. Intenta de nuevo.');\n    }\n  }\n  return numero;\n}\n\nString pedirTexto(String mensaje) {\n  String? texto;\n  while (texto == null || texto.isEmpty) {\n    print(mensaje);\n    texto = stdin.readLineSync();\n    if (texto == null || texto.isEmpty) {\n      print('Error: No ingresaste ningún valor. Intenta de nuevo.');\n    }\n  }\n  return texto;\n}\n\nvoid main() {\n  print('=== EJERCICIOS 8-OCT-2025 - CONTROLES DE FLUJO EN DART ===');\n  \n  // BLOQUE 1: Condicionales (if, else if, switch)\n  \n  print('\\n--- BLOQUE 1: CONDICIONALES ---');\n  \n  // 1. Número mayor o menor que 100\n  print('\\n1. Número mayor o menor que 100:');\n  int numero1 = pedirNumero('Ingresa un número:');\n  if (numero1 > 100) {\n    print('$numero1 es mayor que 100');\n  } else if (numero1 < 100) {\n    print('$numero1 es menor que 100');\n  } else {\n    print('$numero1 es igual a 100');\n  }\n  // Lógica: Comparación secuencial con if-else if-else para determinar relación con 100\n  \n  // 2. Clasificación de edades\n  print('\\n2. Clasificación de edades:');\n  int edad = pedirNumero('Ingresa tu edad:');\n  if (edad < 12) {\n    print('Niño');\n  } else if (edad < 18) {\n    print('Adolescente');\n  } else {\n    print('Adulto');\n  }\n  // Lógica: Encadenamiento de condiciones con rangos de edad usando else if\n  \n  // 3. Día de la semana\n  print('\\n3. Día de la semana:');\n  int diaNumero;\n  do {\n    diaNumero = pedirNumero('Ingresa un número del 1 al 7:');\n    if (diaNumero < 1 || diaNumero > 7) {\n      print('Error: El número debe estar entre 1 y 7. Intenta de nuevo.');\n    }\n  } while (diaNumero < 1 || diaNumero > 7);\n  \n  switch (diaNumero) {\n    case 1:\n      print('Lunes');\n      break;\n    case 2:\n      print('Martes');\n      break;\n    case 3:\n      print('Miércoles');\n      break;\n    case 4:\n      print('Jueves');\n      break;\n    case 5:\n      print('Viernes');\n      break;\n    case 6:\n      print('Sábado');\n      break;\n    case 7:\n      print('Domingo');\n      break;\n  }\n  // Lógica: Switch case para convertir números a días con validación de rango en caso se ponga un número más alto de 7\n  \n  // 4. Nota final del alumno\n  print('\\n4. Nota final del alumno:');\n  double nota;\n  do {\n    nota = pedirDouble('Ingresa una nota (0-10):');\n    if (nota < 0 || nota > 10) {\n      print('Error: La nota debe estar entre 0 y 10. Intenta de nuevo.');\n    }\n  } while (nota < 0 || nota > 10);\n  \n  if (nota >= 0 && nota <= 4) {\n    print('Suspenso');\n  } else if (nota >= 5 && nota <= 6) {\n    print('Aprobado');\n  } else if (nota >= 7 && nota <= 8) {\n    print('Notable');\n  } else {\n    print('Sobresaliente');\n  }\n  // Lógica: Condiciones con rangos numéricos para clasificar notas académicas con máximo y mínimo\n  \n  // 5. Menú de operaciones\n  print('\\n5. Menú de operaciones:');\n  print('1. Sumar');\n  print('2. Restar');\n  print('3. Multiplicar');\n  print('4. Dividir');\n  \n  int opcion;\n  do {\n    opcion = pedirNumero('Elige una opción (1-4):');\n    if (opcion < 1 || opcion > 4) {\n      print('Error: Opción no válida. Intenta de nuevo.');\n    }\n  } while (opcion < 1 || opcion > 4);\n  \n  double num1 = pedirDouble('Ingresa el primer número:');\n  double num2 = pedirDouble('Ingresa el segundo número:');\n  double resultado;\n  \n  switch (opcion) {\n    case 1:\n      resultado = num1 + num2;\n      print('$num1 + $num2 = $resultado');\n      break;\n    case 2:\n      resultado = num1 - num2;\n      print('$num1 - $num2 = $resultado');\n      break;\n    case 3:\n      resultado = num1 * num2;\n      print('$num1 * $num2 = $resultado');\n      break;\n    case 4:\n      if (num2 != 0) {\n        resultado = num1 / num2;\n        print('$num1 / $num2 = $resultado');\n      } else {\n        print('Error: No se puede dividir entre cero');\n      }\n      break;\n  }\n  // Lógica: Switch para ejecutar operaciones matemáticas según selección de menú\n  \n  // BLOQUE 2: Bucles (for, for-in, while, do-while)\n  \n  print('\\n--- BLOQUE 2: BUCLES ---');\n  \n  // 6. Contar del 1 al 10\n  print('\\n6. Contar del 1 al 10:');\n  for (int i = 1; i <= 10; i++) {\n    print(i);\n  }\n  // Lógica: Bucle for con incremento para secuencia numérica ascendente\n  \n  // 7. Suma de números pares\n  print('\\n7. Suma de números pares del 1 al 50:');\n  int sumaPares = 0;\n  for (int i = 1; i <= 50; i++) {\n    if (i % 2 == 0) {\n      sumaPares += i;\n    }\n  }\n  print('La suma de los números pares del 1 al 50 es: $sumaPares');\n  // Lógica: For con filtro de pares usando módulo y acumulador de suma\n  \n  // 8. Tabla de multiplicar\n  print('\\n8. Tabla de multiplicar:');\n  int numeroTabla = pedirNumero('Ingresa un número para ver su tabla de multiplicar:');\n  for (int i = 1; i <= 10; i++) {\n    print('$numeroTabla x $i = ${numeroTabla * i}');\n  }\n  // Lógica: Iteración for para generar tabla de multiplicar con formato\n  \n  // 9. Recorrer lista de frutas\n  print('\\n9. Recorrer lista de frutas:');\n  List<String> frutas = ['Manzana', 'Banana', 'Naranja', 'Uva', 'Pera'];\n  for (String fruta in frutas) {\n    print(fruta);\n  }\n  // Lógica: For-in para iteración simplificada sobre elementos de lista\n  \n  // 10. Buscar elemento en lista\n  print('\\n10. Buscar elemento en lista:');\n  List<String> nombres = ['Ana', 'Juan', 'María', 'Carlos', 'Laura'];\n  print('Lista actual: $nombres');\n  String nombreBuscado = pedirTexto('Ingresa un nombre para buscar:');\n  \n  bool encontrado = false;\n  for (String nombre in nombres) {\n    if (nombre.toLowerCase() == nombreBuscado.toLowerCase()) {\n      encontrado = true;\n      break;\n    }\n  }\n  \n  if (encontrado) {\n    print('¡El nombre \"$nombreBuscado\" está en la lista!');\n  } else {\n    print('El nombre \"$nombreBuscado\" no está en la lista.');\n  }\n  // Lógica: Búsqueda lineal con for-in y comparación case-insensitive\n  \n  // 11. Contador hasta número ingresado\n  print('\\n11. Contador hasta número ingresado:');\n  int n = pedirNumero('Ingresa un número para la cuenta regresiva:');\n  for (int i = n; i >= 1; i--) {\n    print(i);\n  }\n  // Lógica: For descendente desde n hasta 1 para cuenta regresiva\n  \n  // 12. Suma de entradas del usuario\n  print('\\n12. Suma de entradas del usuario:');\n  int sumaTotal = 0;\n  for (int i = 1; i <= 5; i++) {\n    int numero = pedirNumero('Ingresa el número $i:');\n    sumaTotal += numero;\n  }\n  print('La suma de los 5 números es: $sumaTotal');\n  // Lógica: For con acumulador para sumar múltiples entradas del usuario\n  \n  // 13. Adivina el número secreto\n  print('\\n13. Adivina el número secreto:');\n  int numeroSecreto = 7;\n  int intento;\n  print('Adivina el número secreto (entre 1 y 10)');\n  \n  do {\n    intento = pedirNumero('Tu intento:');\n    if (intento != numeroSecreto) {\n      print('¡Incorrecto! Intenta de nuevo.');\n    }\n  } while (intento != numeroSecreto);\n  \n  print('¡Correcto! El número secreto era $numeroSecreto');\n  // Lógica: While con condición de desigualdad para juego de adivinar el número\n  \n  // 14. Contador de intentos\n  print('\\n14. Contador de intentos:');\n  numeroSecreto = 7;\n  int contadorIntentos = 0;\n  print('Adivina el número secreto (entre 1 y 10)');\n  \n  do {\n    intento = pedirNumero('Tu intento:');\n    contadorIntentos++;\n    if (intento != numeroSecreto) {\n      print('¡Incorrecto! Intenta de nuevo.');\n    }\n  } while (intento != numeroSecreto);\n  \n  print('¡Correcto! Adivinaste en $contadorIntentos intento(s)');\n  // Lógica: Contador incremental dentro de bucle para medir rendimiento\n  \n  // 15. Confirmación de salida\n  print('\\n15. Confirmación de salida:');\n  String respuesta;\n  do {\n    respuesta = pedirTexto('¿Deseas continuar? (s/n):').toLowerCase();\n  } while (respuesta != 'n');\n  \n  print('¡Hasta luego!');\n  // Lógica: Do-while para ejecución mínima una vez hasta condición de salida\n  \n}"
        }
    ]
}