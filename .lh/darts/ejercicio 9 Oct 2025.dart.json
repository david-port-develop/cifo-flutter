{
    "sourceFile": "darts/ejercicio 9 Oct 2025.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1760005343243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760006000954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,33 +1,53 @@\n import 'dart:io';\n+import 'package:intl/intl.dart';\n \n-// Funciones de validación (las mismas de ejercicios anteriores)\n-int pedirNumero(String mensaje) {\n-  int? numero;\n+// Función pedirDouble mejorada con soporte para formato europeo\n+double pedirDouble(String mensaje) {\n+  double? numero;\n+\n   while (numero == null) {\n     print(mensaje);\n+    print('(Formato europeo: ej: 1234,56 o 1.234,56)');\n+\n     String? input = stdin.readLineSync();\n+\n     if (input != null && input.isNotEmpty) {\n       try {\n-        numero = int.parse(input);\n+        // Conversión para formato europeo\n+        String inputParseable = input\n+            .replaceAll(' ', '') // Remover espacios\n+            .replaceAll('.', '') // Remover separadores de miles\n+            .replaceAll(',', '.'); // Convertir coma decimal a punto\n+\n+        numero = double.parse(inputParseable);\n       } catch (e) {\n-        print('Error: \"$input\" no es un número válido. Intenta de nuevo.');\n+        print('Error: \"$input\" no es un número válido.');\n+        print('Ejemplos válidos: 12,5 - 1234,56 - 1.234,56');\n       }\n     } else {\n       print('Error: No ingresaste ningún valor. Intenta de nuevo.');\n     }\n   }\n+\n   return numero;\n }\n \n-double pedirDouble(String mensaje) {\n-  double? numero;\n+// Función para formatear números en formato europeo\n+String formatearDouble(double numero) {\n+  final formato = NumberFormat('#,##0.00', 'es_ES');\n+  return formato.format(numero);\n+}\n+\n+// Funciones de validación (las mismas de ejercicios anteriores)\n+int pedirNumero(String mensaje) {\n+  int? numero;\n   while (numero == null) {\n     print(mensaje);\n     String? input = stdin.readLineSync();\n     if (input != null && input.isNotEmpty) {\n       try {\n-        numero = double.parse(input);\n+        numero = int.parse(input);\n       } catch (e) {\n         print('Error: \"$input\" no es un número válido. Intenta de nuevo.');\n       }\n     } else {\n@@ -299,15 +319,17 @@\n       print('\\n--- Ejercicio 4: Área del rectángulo ---');\n       double base = pedirDouble('Ingresa la base:');\n       double altura = pedirDouble('Ingresa la altura:');\n       double area = areaRectangulo(base, altura);\n-      print('Área del rectángulo: $area');\n+      var areaEU = formatearDouble(area);\n+      print('Área del rectángulo: $areaEU');\n     } else if (opcion == 5) {\n       print('\\n--- Ejercicio 5: Media de notas ---');\n       List<double> notas = [7.5, 6.0, 8.5, 5.0, 9.0];\n       double media = calcularMedia(notas);\n       print('Notas: $notas');\n-      print('Media: ${media.toStringAsFixed(2)}');\n+      var mediaEU = formatearDouble(mediaEU);\n+      print('Media: ${mediaEU}');\n     } else if (opcion == 6) {\n       print('\\n--- Ejercicio 6: Nombres con A ---');\n       List<String> nombres = ['Ana', 'Juan', 'Alberto', 'María', 'Antonio'];\n       int cantidad = contarNombresConA(nombres);\n"
                },
                {
                    "date": 1760006059646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -326,9 +326,9 @@\n       print('\\n--- Ejercicio 5: Media de notas ---');\n       List<double> notas = [7.5, 6.0, 8.5, 5.0, 9.0];\n       double media = calcularMedia(notas);\n       print('Notas: $notas');\n-      var mediaEU = formatearDouble(mediaEU);\n+      var mediaEU = formatearDouble(media);\n       print('Media: ${mediaEU}');\n     } else if (opcion == 6) {\n       print('\\n--- Ejercicio 6: Nombres con A ---');\n       List<String> nombres = ['Ana', 'Juan', 'Alberto', 'María', 'Antonio'];\n"
                },
                {
                    "date": 1760006883095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,8 +108,15 @@\n   return suma / notas.length;\n }\n // Lógica: Iteración con for-in y división por longitud para promedio\n \n+// 5b. Funcion que recorre una lista y la imprime en formato EU\n+double formateaListaDecimales(List<double> decimales) {\n+  for (double decimal in decimales) {\n+    print('$decimal');\n+  }\n+}\n+\n // 6. Función que cuenta nombres que empiezan por \"A\"\n int contarNombresConA(List<String> nombres) {\n   int contador = 0;\n   for (String nombre in nombres) {\n@@ -323,11 +330,12 @@\n       var areaEU = formatearDouble(area);\n       print('Área del rectángulo: $areaEU');\n     } else if (opcion == 5) {\n       print('\\n--- Ejercicio 5: Media de notas ---');\n+      //aquí lo ideal para adaptarlo a EU sería recorrer la\n       List<double> notas = [7.5, 6.0, 8.5, 5.0, 9.0];\n       double media = calcularMedia(notas);\n-      print('Notas: $notas');\n+      print(formatearListaDecimales(notas));\n       var mediaEU = formatearDouble(media);\n       print('Media: ${mediaEU}');\n     } else if (opcion == 6) {\n       print('\\n--- Ejercicio 6: Nombres con A ---');\n@@ -354,9 +362,9 @@\n       int subOpcion = pedirNumero('Elige conversión:');\n       if (subOpcion == 1) {\n         double celsius = pedirDouble('Ingresa grados Celsius:');\n         double fahrenheit = celsiusAFahrenheit(celsius);\n-        print('$celsius°C = ${fahrenheit.toStringAsFixed(2)}°F');\n+        print('$celsius°C = ${formatearDouble(fahrenheit)}°F');\n       } else if (subOpcion == 2) {\n         double fahrenheit = pedirDouble('Ingresa grados Fahrenheit:');\n         double celsius = fahrenheitACelsius(fahrenheit);\n         print('$fahrenheit°F = ${celsius.toStringAsFixed(2)}°C');\n"
                },
                {
                    "date": 1760006903436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,9 +333,9 @@\n       print('\\n--- Ejercicio 5: Media de notas ---');\n       //aquí lo ideal para adaptarlo a EU sería recorrer la\n       List<double> notas = [7.5, 6.0, 8.5, 5.0, 9.0];\n       double media = calcularMedia(notas);\n-      print(formatearListaDecimales(notas));\n+      print(formateaListaDecimales(notas));\n       var mediaEU = formatearDouble(media);\n       print('Media: ${mediaEU}');\n     } else if (opcion == 6) {\n       print('\\n--- Ejercicio 6: Nombres con A ---');\n"
                },
                {
                    "date": 1760006943938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,9 +333,9 @@\n       print('\\n--- Ejercicio 5: Media de notas ---');\n       //aquí lo ideal para adaptarlo a EU sería recorrer la\n       List<double> notas = [7.5, 6.0, 8.5, 5.0, 9.0];\n       double media = calcularMedia(notas);\n-      print(formateaListaDecimales(notas));\n+      formateaListaDecimales(notas);\n       var mediaEU = formatearDouble(media);\n       print('Media: ${mediaEU}');\n     } else if (opcion == 6) {\n       print('\\n--- Ejercicio 6: Nombres con A ---');\n"
                },
                {
                    "date": 1760007028358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n }\n // Lógica: Iteración con for-in y división por longitud para promedio\n \n // 5b. Funcion que recorre una lista y la imprime en formato EU\n-double formateaListaDecimales(List<double> decimales) {\n+void imprimeListaDecimales(List<double> decimales) {\n   for (double decimal in decimales) {\n     print('$decimal');\n   }\n }\n@@ -333,9 +333,9 @@\n       print('\\n--- Ejercicio 5: Media de notas ---');\n       //aquí lo ideal para adaptarlo a EU sería recorrer la\n       List<double> notas = [7.5, 6.0, 8.5, 5.0, 9.0];\n       double media = calcularMedia(notas);\n-      formateaListaDecimales(notas);\n+      imprimeListaDecimales(notas);\n       var mediaEU = formatearDouble(media);\n       print('Media: ${mediaEU}');\n     } else if (opcion == 6) {\n       print('\\n--- Ejercicio 6: Nombres con A ---');\n"
                },
                {
                    "date": 1760007210644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n \n // 5b. Funcion que recorre una lista y la imprime en formato EU\n void imprimeListaDecimales(List<double> decimales) {\n   for (double decimal in decimales) {\n-    print('$decimal');\n+    print('$formatearDouble(decimal)');\n   }\n }\n \n // 6. Función que cuenta nombres que empiezan por \"A\"\n"
                },
                {
                    "date": 1760007371303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,15 +108,8 @@\n   return suma / notas.length;\n }\n // Lógica: Iteración con for-in y división por longitud para promedio\n \n-// 5b. Funcion que recorre una lista y la imprime en formato EU\n-void imprimeListaDecimales(List<double> decimales) {\n-  for (double decimal in decimales) {\n-    print('$formatearDouble(decimal)');\n-  }\n-}\n-\n // 6. Función que cuenta nombres que empiezan por \"A\"\n int contarNombresConA(List<String> nombres) {\n   int contador = 0;\n   for (String nombre in nombres) {\n@@ -333,9 +326,13 @@\n       print('\\n--- Ejercicio 5: Media de notas ---');\n       //aquí lo ideal para adaptarlo a EU sería recorrer la\n       List<double> notas = [7.5, 6.0, 8.5, 5.0, 9.0];\n       double media = calcularMedia(notas);\n-      imprimeListaDecimales(notas);\n+      //La imprime en formato EU\n+      for (double nota in notas) {\n+        print('$formatearDouble(nota)');\n+      }\n+\n       var mediaEU = formatearDouble(media);\n       print('Media: ${mediaEU}');\n     } else if (opcion == 6) {\n       print('\\n--- Ejercicio 6: Nombres con A ---');\n"
                },
                {
                    "date": 1760007478578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,9 +328,9 @@\n       List<double> notas = [7.5, 6.0, 8.5, 5.0, 9.0];\n       double media = calcularMedia(notas);\n       //La imprime en formato EU\n       for (double nota in notas) {\n-        print('$formatearDouble(nota)');\n+        print(formatearDouble(nota));\n       }\n \n       var mediaEU = formatearDouble(media);\n       print('Media: ${mediaEU}');\n"
                },
                {
                    "date": 1760008687485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,21 +201,12 @@\n   }\n }\n // Lógica: Comparación múltiple con operadores lógicos para determinar máximo\n \n-// 14. Función que calcula IMC y clasifica\n-String calcularIMC(double peso, double altura) {\n+// 14. Función que calcula IMC\n+double calcularIMC(double peso, double altura) {\n   double imc = peso / (altura * altura);\n-\n-  if (imc < 18.5) {\n-    return 'IMC: ${imc.toStringAsFixed(2)} - Bajo peso';\n-  } else if (imc < 25) {\n-    return 'IMC: ${imc.toStringAsFixed(2)} - Peso normal';\n-  } else if (imc < 30) {\n-    return 'IMC: ${imc.toStringAsFixed(2)} - Sobrepeso';\n-  } else {\n-    return 'IMC: ${imc.toStringAsFixed(2)} - Obesidad';\n-  }\n+  return imc;\n }\n // Lógica: Cálculo de IMC y clasificación según rangos médicos estándar\n \n // 15. Función que filtra números pares de una lista\n@@ -330,9 +321,8 @@\n       //La imprime en formato EU\n       for (double nota in notas) {\n         print(formatearDouble(nota));\n       }\n-\n       var mediaEU = formatearDouble(media);\n       print('Media: ${mediaEU}');\n     } else if (opcion == 6) {\n       print('\\n--- Ejercicio 6: Nombres con A ---');\n@@ -347,14 +337,18 @@\n       );\n       int fact = factorial(numFact);\n       print('Factorial de $numFact: $fact');\n     } else if (opcion == 8) {\n-      print('\\n--- Ejercicio 8: Contar vocales ---');\n+\n+  \n+  print('\\n--- Ejercicio 8: Contar vocales ---');\n       String palabra = pedirTexto('Ingresa una palabra:');\n       int vocales = contarVocales(palabra);\n       print('La palabra \"$palabra\" tiene $vocales vocales');\n     } else if (opcion == 9) {\n-      print('\\n--- Ejercicio 9: Conversión de temperaturas ---');\n+\n+  \n+  print('\\n--- Ejercicio 9: Conversión de temperaturas ---');\n       print('1. Celsius a Fahrenheit');\n       print('2. Fahrenheit a Celsius');\n       int subOpcion = pedirNumero('Elige conversión:');\n       if (subOpcion == 1) {\n@@ -363,51 +357,77 @@\n         print('$celsius°C = ${formatearDouble(fahrenheit)}°F');\n       } else if (subOpcion == 2) {\n         double fahrenheit = pedirDouble('Ingresa grados Fahrenheit:');\n         double celsius = fahrenheitACelsius(fahrenheit);\n-        print('$fahrenheit°F = ${celsius.toStringAsFixed(2)}°C');\n+        print('$fahrenheit°F = ${formatearDouble(fahrenheit)}°C');\n       } else {\n         print('Opción no válida');\n       }\n     } else if (opcion == 10) {\n-      print('\\n--- Ejercicio 10: Verificar divisibilidad ---');\n+\n+  \n+  print('\\n--- Ejercicio 10: Verificar divisibilidad ---');\n       int num1 = pedirNumero('Ingresa el primer número:');\n       int num2 = pedirNumero('Ingresa el segundo número:');\n       String resultadoDiv = esDivisible(num1, num2);\n       print(resultadoDiv);\n     } else if (opcion == 11) {\n-      print('\\n--- Ejercicio 11: Total con IVA ---');\n+\n+  \n+  print('\\n--- Ejercicio 11: Total con IVA ---');\n       List<double> precios = [100.0, 50.0, 25.0, 75.0];\n       double totalIVA = calcularTotalConIVA(precios);\n-      print('Precios: $precios');\n-      print('Total con IVA (21%): \\$${totalIVA.toStringAsFixed(2)}');\n+      //La imprime en formato EU\n+      for (double precio in precios) {\n+        print(formatearDouble(precio));\n+      }\n+      var totalIVAEU = formatearDouble(totalIVA);\n+      print('Total con IVA (21%): \\$${totalIVAEU}');\n     } else if (opcion == 12) {\n-      print('\\n--- Ejercicio 12: Contar apariciones de letra ---');\n+\n+  \n+  print('\\n--- Ejercicio 12: Contar apariciones de letra ---');\n       String texto = pedirTexto('Ingresa un texto:');\n       String letra = pedirTexto('Ingresa la letra a buscar:');\n       int apariciones = contarLetra(texto, letra);\n       print('La letra \"$letra\" aparece $apariciones veces en el texto');\n     } else if (opcion == 13) {\n-      print('\\n--- Ejercicio 13: Mayor de tres números ---');\n+\n+  \n+  print('\\n--- Ejercicio 13: Mayor de tres números ---');\n       int x = pedirNumero('Ingresa el primer número:');\n       int y = pedirNumero('Ingresa el segundo número:');\n       int z = pedirNumero('Ingresa el tercer número:');\n       int mayor = encontrarMayor(x, y, z);\n       print('El mayor de $x, $y, $z es: $mayor');\n     } else if (opcion == 14) {\n-      print('\\n--- Ejercicio 14: Calcular IMC ---');\n+\n+  \n+  print('\\n--- Ejercicio 14: Calcular IMC ---');\n       double peso = pedirDouble('Ingresa tu peso en kg:');\n       double altura = pedirDouble('Ingresa tu altura en metros:');\n-      String resultadoIMC = calcularIMC(peso, altura);\n-      print(resultadoIMC);\n+      double resultadoIMC = calcularIMC(peso, altura);\n+      if (resultadoIMC < 18.5) {\n+        print ('IMC: ${formatearDouble(resultadoIMC)} - Bajo peso');\n+      } else if (imc < 25) {\n+        print ('IMC: ${formatearDouble(resultadoIMC)} - Medio peso');\n+      } else if (imc < 30) {\n+        print ('IMC: ${formatearDouble(resultadoIMC)} - Sobrepeso');\n+      } else {\n+        print ('IMC: ${formatearDouble(resultadoIMC)} - Obesidad');\n+      }\n     } else if (opcion == 15) {\n-      print('\\n--- Ejercicio 15: Filtrar números pares ---');\n+\n+  \n+  print('\\n--- Ejercicio 15: Filtrar números pares ---');\n       List<int> numeros = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n       List<int> pares = filtrarPares(numeros);\n       print('Lista original: $numeros');\n       print('Números pares: $pares');\n     } else if (opcion == 16) {\n-      print('\\n--- Ejercicio 16: String más largo ---');\n+\n+  \n+  print('\\n--- Ejercicio 16: String más largo ---');\n       List<String> textos = [\n         'Hola',\n         'Mundo',\n         'Programación',\n@@ -417,19 +437,25 @@\n       String masLargo = encontrarMasLargo(textos);\n       print('Lista: $textos');\n       print('Texto más largo: \"$masLargo\"');\n     } else if (opcion == 17) {\n-      print('\\n--- Ejercicio 17: Saludo personalizado ---');\n+\n+  \n+  print('\\n--- Ejercicio 17: Saludo personalizado ---');\n       String nombre = pedirTexto('Ingresa tu nombre:');\n       String saludo = saludoPersonalizado(nombre);\n       print(saludo);\n     } else if (opcion == 18) {\n-      print('\\n--- Ejercicio 18: Sumar hasta N ---');\n+\n+  \n+  print('\\n--- Ejercicio 18: Sumar hasta N ---');\n       int n = pedirNumero('Ingresa un número N:');\n       int suma = sumaHastaN(n);\n       print('La suma de todos los enteros hasta $n es: $suma');\n     } else if (opcion == 19) {\n-      print('\\n--- Ejercicio 19: Verificar palíndromo ---');\n+\n+  \n+  print('\\n--- Ejercicio 19: Verificar palíndromo ---');\n       String palabraPal = pedirTexto('Ingresa una palabra:');\n       bool esPal = esPalindromo(palabraPal);\n       if (esPal) {\n         print('\"$palabraPal\" es un palíndromo');\n@@ -442,9 +468,11 @@\n       print('Opción no válida. Intenta de nuevo.');\n     }\n \n     if (opcion != 0) {\n-      print('\\nPresiona Enter para continuar...');\n+\n+  \n+  print('\\nPresiona Enter para continuar...');\n       stdin.readLineSync();\n     }\n   } while (opcion != 0);\n }\n"
                },
                {
                    "date": 1760008924416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -390,17 +390,17 @@\n     } else if (opcion == 14) {\n       print('\\n--- Ejercicio 14: Calcular IMC ---');\n       double peso = pedirDouble('Ingresa tu peso en kg:');\n       double altura = pedirDouble('Ingresa tu altura en metros:');\n-      double resultadoIMC = calcularIMC(peso, altura);\n-      if (resultadoIMC < 18.5) {\n-        print('IMC: ${formatearDouble(resultadoIMC)} - Bajo peso');\n+      double imc = calcularIMC(peso, altura);\n+      if (imc < 18.5) {\n+        print('IMC: ${formatearDouble(imc)} - Bajo peso');\n       } else if (imc < 25) {\n-        print('IMC: ${formatearDouble(resultadoIMC)} - Medio peso');\n+        print('IMC: ${formatearDouble(imc)} - Medio peso');\n       } else if (imc < 30) {\n-        print('IMC: ${formatearDouble(resultadoIMC)} - Sobrepeso');\n+        print('IMC: ${formatearDouble(imc)} - Sobrepeso');\n       } else {\n-        print('IMC: ${formatearDouble(resultadoIMC)} - Obesidad');\n+        print('IMC: ${formatearDouble(imc)} - Obesidad');\n       }\n     } else if (opcion == 15) {\n       print('\\n--- Ejercicio 15: Filtrar números pares ---');\n       List<int> numeros = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n"
                }
            ],
            "date": 1760005343243,
            "name": "Commit-0",
            "content": "import 'dart:io';\n\n// Funciones de validación (las mismas de ejercicios anteriores)\nint pedirNumero(String mensaje) {\n  int? numero;\n  while (numero == null) {\n    print(mensaje);\n    String? input = stdin.readLineSync();\n    if (input != null && input.isNotEmpty) {\n      try {\n        numero = int.parse(input);\n      } catch (e) {\n        print('Error: \"$input\" no es un número válido. Intenta de nuevo.');\n      }\n    } else {\n      print('Error: No ingresaste ningún valor. Intenta de nuevo.');\n    }\n  }\n  return numero;\n}\n\ndouble pedirDouble(String mensaje) {\n  double? numero;\n  while (numero == null) {\n    print(mensaje);\n    String? input = stdin.readLineSync();\n    if (input != null && input.isNotEmpty) {\n      try {\n        numero = double.parse(input);\n      } catch (e) {\n        print('Error: \"$input\" no es un número válido. Intenta de nuevo.');\n      }\n    } else {\n      print('Error: No ingresaste ningún valor. Intenta de nuevo.');\n    }\n  }\n  return numero;\n}\n\nString pedirTexto(String mensaje) {\n  String? texto;\n  while (texto == null || texto.isEmpty) {\n    print(mensaje);\n    texto = stdin.readLineSync();\n    if (texto == null || texto.isEmpty) {\n      print('Error: No ingresaste ningún valor. Intenta de nuevo.');\n    }\n  }\n  return texto;\n}\n\n// BLOQUE 1 - FUNCIONES BÁSICAS\n\n// 1. Función sin parámetros ni retorno\nvoid saludar() {\n  print('Hola, bienvenido a Dart');\n}\n// Lógica: Función void simple que solo ejecuta print\n\n// 2. Función que recibe dos números y devuelve su suma\nint sumar(int a, int b) {\n  return a + b;\n}\n// Lógica: Función con parámetros y return para operación matemática básica\n\n// 3. Función que determina si un número es par o impar\nString esParOImpar(int numero) {\n  if (numero % 2 == 0) {\n    return 'par';\n  } else {\n    return 'impar';\n  }\n}\n// Lógica: Uso de módulo % para determinar paridad con retorno condicional\n\n// 4. Función que calcula el área de un rectángulo\ndouble areaRectangulo(double base, double altura) {\n  return base * altura;\n}\n// Lógica: Fórmula matemática básica con parámetros double\n\n// 5. Función que calcula la media de una lista de notas\ndouble calcularMedia(List<double> notas) {\n  double suma = 0;\n  for (double nota in notas) {\n    suma += nota;\n  }\n  return suma / notas.length;\n}\n// Lógica: Iteración con for-in y división por longitud para promedio\n\n// 6. Función que cuenta nombres que empiezan por \"A\"\nint contarNombresConA(List<String> nombres) {\n  int contador = 0;\n  for (String nombre in nombres) {\n    if (nombre.startsWith('A')) {\n      contador++;\n    }\n  }\n  return contador;\n}\n// Lógica: Filtrado con startsWith() y contador incremental\n\n// 7. Función que calcula el factorial de un número\nint factorial(int n) {\n  int resultado = 1;\n  for (int i = 1; i <= n; i++) {\n    resultado *= i;\n  }\n  return resultado;\n}\n// Lógica: Bucle for con multiplicación acumulativa para factorial\n\n// 8. Función que cuenta vocales en una palabra\nint contarVocales(String palabra) {\n  int vocales = 0;\n  for (String letra in palabra.toLowerCase().split('')) {\n    if ('aeiou'.contains(letra)) {\n      vocales++;\n    }\n  }\n  return vocales;\n}\n// Lógica: Conversión a minúsculas y comparación con string de vocales\n\n// 9. Funciones de conversión de temperatura\ndouble celsiusAFahrenheit(double celsius) {\n  return (celsius * 9 / 5) + 32;\n}\n\ndouble fahrenheitACelsius(double fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n// Lógica: Aplicación de fórmulas de conversión térmica estándar\n\n// 10. Función que verifica divisibilidad\nString esDivisible(int a, int b) {\n  if (b == 0) {\n    return 'No se puede dividir por cero';\n  }\n  if (a % b == 0) {\n    return '$a es divisible por $b';\n  } else {\n    return '$a no es divisible por $b';\n  }\n}\n// Lógica: Verificación de divisibilidad con módulo y manejo de división por cero\n\n// BLOQUE 2 - RETOS COMBINADOS\n\n// 11. Función que calcula total con IVA\ndouble calcularTotalConIVA(List<double> precios) {\n  double total = 0;\n  for (double precio in precios) {\n    total += precio * 1.21;\n  }\n  return total;\n}\n// Lógica: Aplicación de porcentaje IVA a cada elemento y suma acumulativa\n\n// 12. Función que cuenta apariciones de una letra\nint contarLetra(String texto, String letra) {\n  int contador = 0;\n  for (String caracter in texto.toLowerCase().split('')) {\n    if (caracter == letra.toLowerCase()) {\n      contador++;\n    }\n  }\n  return contador;\n}\n// Lógica: Búsqueda case-insensitive con división de string en caracteres\n\n// 13. Función que encuentra el mayor de tres números\nint encontrarMayor(int a, int b, int c) {\n  if (a >= b && a >= c) {\n    return a;\n  } else if (b >= a && b >= c) {\n    return b;\n  } else {\n    return c;\n  }\n}\n// Lógica: Comparación múltiple con operadores lógicos para determinar máximo\n\n// 14. Función que calcula IMC y clasifica\nString calcularIMC(double peso, double altura) {\n  double imc = peso / (altura * altura);\n\n  if (imc < 18.5) {\n    return 'IMC: ${imc.toStringAsFixed(2)} - Bajo peso';\n  } else if (imc < 25) {\n    return 'IMC: ${imc.toStringAsFixed(2)} - Peso normal';\n  } else if (imc < 30) {\n    return 'IMC: ${imc.toStringAsFixed(2)} - Sobrepeso';\n  } else {\n    return 'IMC: ${imc.toStringAsFixed(2)} - Obesidad';\n  }\n}\n// Lógica: Cálculo de IMC y clasificación según rangos médicos estándar\n\n// 15. Función que filtra números pares de una lista\nList<int> filtrarPares(List<int> numeros) {\n  List<int> pares = [];\n  for (int numero in numeros) {\n    if (numero % 2 == 0) {\n      pares.add(numero);\n    }\n  }\n  return pares;\n}\n// Lógica: Filtrado con módulo y construcción de nueva lista con add()\n\n// 16. Función que encuentra el string más largo\nString encontrarMasLargo(List<String> textos) {\n  String masLargo = textos[0];\n  for (String texto in textos) {\n    if (texto.length > masLargo.length) {\n      masLargo = texto;\n    }\n  }\n  return masLargo;\n}\n// Lógica: Comparación secuencial de longitudes para encontrar máximo\n\n// 17. Función de saludo personalizado\nString saludoPersonalizado(String nombre) {\n  return '¡Hola $nombre! Es un placer verte por aquí.';\n}\n// Lógica: Interpolación de strings para mensaje personalizado dinámico\n\n// 18. Función que suma todos los enteros hasta un número\nint sumaHastaN(int n) {\n  int suma = 0;\n  for (int i = 1; i <= n; i++) {\n    suma += i;\n  }\n  return suma;\n}\n// Lógica: Suma acumulativa con bucle for desde 1 hasta n\n\n// 19. Función que verifica palíndromo\nbool esPalindromo(String palabra) {\n  String palabraLimpia = palabra.toLowerCase().replaceAll(' ', '');\n  String palabraInvertida = palabraLimpia.split('').reversed.join('');\n  return palabraLimpia == palabraInvertida;\n}\n// Lógica: Comparación de string original con versión invertida sin espacios\n\n// 20. Programa principal con menú\nvoid menuPrincipal() {\n  print('\\n=== MENÚ PRINCIPAL DE FUNCIONES ===');\n  print('1. Saludar');\n  print('2. Sumar dos números');\n  print('3. Verificar par/impar');\n  print('4. Calcular área rectángulo');\n  print('5. Calcular media de notas');\n  print('6. Contar nombres con A');\n  print('7. Calcular factorial');\n  print('8. Contar vocales');\n  print('9. Convertir temperaturas');\n  print('10. Verificar divisibilidad');\n  print('11. Calcular total con IVA');\n  print('12. Contar apariciones de letra');\n  print('13. Encontrar mayor de tres números');\n  print('14. Calcular IMC');\n  print('15. Filtrar números pares');\n  print('16. Encontrar string más largo');\n  print('17. Saludo personalizado');\n  print('18. Sumar hasta N');\n  print('19. Verificar palíndromo');\n  print('0. Salir');\n}\n// Lógica: Menú estructurado para acceso organizado a todas las funciones\n\nvoid main() {\n  print('=== EJERCICIOS 9-OCT-2025 - FUNCIONES EN DART ===');\n\n  int opcion;\n  do {\n    menuPrincipal();\n    opcion = pedirNumero('\\nElige una opción (0-19):');\n\n    // MENÚ CON IF ELSE\n    if (opcion == 1) {\n      print('\\n--- Ejercicio 1: Saludo ---');\n      saludar();\n    } else if (opcion == 2) {\n      print('\\n--- Ejercicio 2: Sumar dos números ---');\n      int a = pedirNumero('Ingresa el primer número:');\n      int b = pedirNumero('Ingresa el segundo número:');\n      int resultado = sumar(a, b);\n      print('$a + $b = $resultado');\n    } else if (opcion == 3) {\n      print('\\n--- Ejercicio 3: Verificar par/impar ---');\n      int num = pedirNumero('Ingresa un número:');\n      String resultadoPar = esParOImpar(num);\n      print('El número $num es $resultadoPar');\n    } else if (opcion == 4) {\n      print('\\n--- Ejercicio 4: Área del rectángulo ---');\n      double base = pedirDouble('Ingresa la base:');\n      double altura = pedirDouble('Ingresa la altura:');\n      double area = areaRectangulo(base, altura);\n      print('Área del rectángulo: $area');\n    } else if (opcion == 5) {\n      print('\\n--- Ejercicio 5: Media de notas ---');\n      List<double> notas = [7.5, 6.0, 8.5, 5.0, 9.0];\n      double media = calcularMedia(notas);\n      print('Notas: $notas');\n      print('Media: ${media.toStringAsFixed(2)}');\n    } else if (opcion == 6) {\n      print('\\n--- Ejercicio 6: Nombres con A ---');\n      List<String> nombres = ['Ana', 'Juan', 'Alberto', 'María', 'Antonio'];\n      int cantidad = contarNombresConA(nombres);\n      print('Nombres: $nombres');\n      print('Cantidad que empiezan con A: $cantidad');\n    } else if (opcion == 7) {\n      print('\\n--- Ejercicio 7: Factorial ---');\n      int numFact = pedirNumero(\n        'Ingresa un número para calcular su factorial:',\n      );\n      int fact = factorial(numFact);\n      print('Factorial de $numFact: $fact');\n    } else if (opcion == 8) {\n      print('\\n--- Ejercicio 8: Contar vocales ---');\n      String palabra = pedirTexto('Ingresa una palabra:');\n      int vocales = contarVocales(palabra);\n      print('La palabra \"$palabra\" tiene $vocales vocales');\n    } else if (opcion == 9) {\n      print('\\n--- Ejercicio 9: Conversión de temperaturas ---');\n      print('1. Celsius a Fahrenheit');\n      print('2. Fahrenheit a Celsius');\n      int subOpcion = pedirNumero('Elige conversión:');\n      if (subOpcion == 1) {\n        double celsius = pedirDouble('Ingresa grados Celsius:');\n        double fahrenheit = celsiusAFahrenheit(celsius);\n        print('$celsius°C = ${fahrenheit.toStringAsFixed(2)}°F');\n      } else if (subOpcion == 2) {\n        double fahrenheit = pedirDouble('Ingresa grados Fahrenheit:');\n        double celsius = fahrenheitACelsius(fahrenheit);\n        print('$fahrenheit°F = ${celsius.toStringAsFixed(2)}°C');\n      } else {\n        print('Opción no válida');\n      }\n    } else if (opcion == 10) {\n      print('\\n--- Ejercicio 10: Verificar divisibilidad ---');\n      int num1 = pedirNumero('Ingresa el primer número:');\n      int num2 = pedirNumero('Ingresa el segundo número:');\n      String resultadoDiv = esDivisible(num1, num2);\n      print(resultadoDiv);\n    } else if (opcion == 11) {\n      print('\\n--- Ejercicio 11: Total con IVA ---');\n      List<double> precios = [100.0, 50.0, 25.0, 75.0];\n      double totalIVA = calcularTotalConIVA(precios);\n      print('Precios: $precios');\n      print('Total con IVA (21%): \\$${totalIVA.toStringAsFixed(2)}');\n    } else if (opcion == 12) {\n      print('\\n--- Ejercicio 12: Contar apariciones de letra ---');\n      String texto = pedirTexto('Ingresa un texto:');\n      String letra = pedirTexto('Ingresa la letra a buscar:');\n      int apariciones = contarLetra(texto, letra);\n      print('La letra \"$letra\" aparece $apariciones veces en el texto');\n    } else if (opcion == 13) {\n      print('\\n--- Ejercicio 13: Mayor de tres números ---');\n      int x = pedirNumero('Ingresa el primer número:');\n      int y = pedirNumero('Ingresa el segundo número:');\n      int z = pedirNumero('Ingresa el tercer número:');\n      int mayor = encontrarMayor(x, y, z);\n      print('El mayor de $x, $y, $z es: $mayor');\n    } else if (opcion == 14) {\n      print('\\n--- Ejercicio 14: Calcular IMC ---');\n      double peso = pedirDouble('Ingresa tu peso en kg:');\n      double altura = pedirDouble('Ingresa tu altura en metros:');\n      String resultadoIMC = calcularIMC(peso, altura);\n      print(resultadoIMC);\n    } else if (opcion == 15) {\n      print('\\n--- Ejercicio 15: Filtrar números pares ---');\n      List<int> numeros = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n      List<int> pares = filtrarPares(numeros);\n      print('Lista original: $numeros');\n      print('Números pares: $pares');\n    } else if (opcion == 16) {\n      print('\\n--- Ejercicio 16: String más largo ---');\n      List<String> textos = [\n        'Hola',\n        'Mundo',\n        'Programación',\n        'Dart',\n        'Flutter',\n      ];\n      String masLargo = encontrarMasLargo(textos);\n      print('Lista: $textos');\n      print('Texto más largo: \"$masLargo\"');\n    } else if (opcion == 17) {\n      print('\\n--- Ejercicio 17: Saludo personalizado ---');\n      String nombre = pedirTexto('Ingresa tu nombre:');\n      String saludo = saludoPersonalizado(nombre);\n      print(saludo);\n    } else if (opcion == 18) {\n      print('\\n--- Ejercicio 18: Sumar hasta N ---');\n      int n = pedirNumero('Ingresa un número N:');\n      int suma = sumaHastaN(n);\n      print('La suma de todos los enteros hasta $n es: $suma');\n    } else if (opcion == 19) {\n      print('\\n--- Ejercicio 19: Verificar palíndromo ---');\n      String palabraPal = pedirTexto('Ingresa una palabra:');\n      bool esPal = esPalindromo(palabraPal);\n      if (esPal) {\n        print('\"$palabraPal\" es un palíndromo');\n      } else {\n        print('\"$palabraPal\" no es un palíndromo');\n      }\n    } else if (opcion == 0) {\n      print('¡Hasta luego!');\n    } else {\n      print('Opción no válida. Intenta de nuevo.');\n    }\n\n    if (opcion != 0) {\n      print('\\nPresiona Enter para continuar...');\n      stdin.readLineSync();\n    }\n  } while (opcion != 0);\n\n}\n"
        }
    ]
}